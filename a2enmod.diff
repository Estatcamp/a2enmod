--- a2enmod.orig	2012-08-02 23:33:26.000000000 +0200
+++ a2enmod	2012-03-10 14:23:13.000000000 +0100
@@ -1,13 +1,28 @@
-#!/usr/bin/perl -w
+#!/usr/bin/env perl
+#===============================================================================
 #
-# a2enmod by Stefan Fritsch <sf@debian.org>
-# Licensed under Apache License 2.0
+#         FILE: a2enmod
+#
+#  DESCRIPTION: Apache enable/disable module/site, originally written by Stefan Fritsch
+#
+#      LICENSE: Licensed under Apache License 2.0
+#      OPTIONS: [-q|--quiet] [-f|--force]
+#       AUTHOR: Stefan Fritsch <sf@debian.org>
+#      VERSION: 1.0
+#===============================================================================
+
 
 use strict;
+use warnings;
+# core modules
+use Carp;
+use English qw(-no_match_vars);
 use Cwd 'realpath';
 use File::Spec;
 use File::Basename;
 use Getopt::Long;
+# other modules
+#use List::MoreUtils qw(apply);
 
 my $quiet;
 my $force;
@@ -17,8 +32,13 @@
     'force|f' => \$force
 ) or exit 2;
 
-my $basename = basename($0);
-$basename =~ /^a2(en|dis)(mod|site)((?:-.+)?)$/
+my $basename = basename($PROGRAM_NAME);
+$basename =~ m{\A
+    a2
+    (en|dis)
+    (mod|site)
+    ((?:-.+)?)
+    \z}xms
     or die "$basename call name unknown\n";
 my $act        = $1;
 my $obj        = $2;
@@ -28,9 +48,9 @@
     || (
     $ENV{APACHE_CONFDIR}
     ? "$ENV{APACHE_CONFDIR}/envvars"
-    : "/etc/apache2$dir_suffix/envvars"
+    : "/etc/httpd/conf$dir_suffix/envvars"
     );
-$ENV{LANG}='C';
+local $ENV{LANG}='C';
 read_env_file($env_file);
 
 $act .= 'able';
@@ -46,11 +66,11 @@
     $sffx   = '';
     $reload = 'reload';
 }
-$name = ucfirst($obj);
+$name = ucfirst $obj;
 
-my $confdir  = $ENV{APACHE_CONFDIR}                  || "/etc/apache2$dir_suffix";
-my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") } || "$confdir/$dir-available";
-my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") }   || "$confdir/$dir-enabled";
+my $confdir  = $ENV{APACHE_CONFDIR}                 || "/etc/httpd/conf$dir_suffix";
+my $availdir = $ENV{ uc "APACHE_${dir}_AVAILABLE" } || "$confdir/$dir-available";
+my $enabldir = $ENV{ uc "APACHE_${dir}_ENABLED" }   || "$confdir/$dir-enabled";
 
 my $choicedir = $act eq 'enable' ? $availdir : $enabldir;
 my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );
@@ -84,7 +104,7 @@
     doit($acton) or $rc = 1;
 }
 
-info("To activate the new configuration, you need to run:\n  service apache2 $reload\n")
+info("Run '/etc/rc.d/httpd $reload' to activate new configuration!\n")
     if $request_reload;
 
 exit($rc);
@@ -100,10 +120,15 @@
         s{^000-default$}{default};
         $_
     } glob("$choicedir/$arg$sffx");
+#    my @glob = apply {
+#        s{^$choicedir/}{};
+#        s{$sffx$}{};
+#        s{^000-default$}{default};
+#    } glob "$choicedir/$arg$sffx";
 
     # use same rules as apache's Include directive
-    @glob = grep( /^[[:alnum:]][-._[:alnum:]]*$/, @glob );
-    @glob = grep( !/\.dpkg/, @glob );
+    @glob = grep {/^[[:alnum:]][-._[:alnum:]]*$/} @glob;
+    @glob = grep {!/[.]dpkg/} @glob;
 
     return @glob;
 }
@@ -111,7 +136,7 @@
 sub doit {
     my $acton = shift;
 
-    my $prio = "";
+    my $prio = q{};
     if ( $obj eq 'site' && $acton eq 'default' ) {
         $prio = '000-';
     }
@@ -136,7 +161,7 @@
         if ( -l $link && !-e $link ) {
 		if ( $act eq 'disable' ) {
 			info("removing dangling symlink $link\n");
-			unlink($link);
+			unlink $link;
 			return 1;
 		}
 		else {
@@ -152,13 +177,14 @@
     if ( $obj eq 'module' ) {
         if ( $act eq 'enable' ) {
             my $depends = qx{grep "# Depends:" "$availdir/$acton.load"|cut -f2 -d:};
-            $depends =~ s,^[\s\n]+,,;
-            $depends =~ s,[\s\n]+$,,;
-            do_deps( $acton, split( /[\n\s]+/, $depends ) ) or return 0;
+            $depends =~ s{^[\s\n]+}{};
+            $depends =~ s{[\s\n]+$}{};
+            do_deps( $acton, split /[\n\s]+/, $depends ) or return 0;
         }
         else {
             my @depends = qx{egrep "# Depends:.*${acton}( |\$)" $enabldir/*.load};
             @depends = grep {s{^.*?/([^/]*?)\.load:.*}{$1}s} @depends;
+#            @depends = apply {s{^.*?/([^/]*?)[.]load:.*}{$1}s} @depends;
             if ( scalar @depends ) {
                 if ($force) {
                     do_deps( $acton, @depends ) or return 0;
@@ -213,11 +239,11 @@
                 }
             }
 
-            print "Enabling $obj $acton.\n";
-            if ( $acton eq 'ssl' ) {
-                info("See /usr/share/doc/apache2.2-common/README.Debian.gz on " .
-                     "how to configure SSL and create self-signed certificates.\n");
-	    }
+#            print "Enabling $obj $acton.\n";
+#            if ( $acton eq 'ssl' ) {
+#                info("See /usr/share/doc/apache2.2-common/README.Debian.gz on " .
+#                     "how to configure SSL and create self-signed certificates.\n");
+#	    }
             return add_link( $tgt, $link );
         }
         else {
@@ -262,8 +288,8 @@
     my ( $tgt, $link ) = @_;
 
     # create relative link
-    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {
-        die("Could not create $link: $!\n");
+    if ( !symlink  File::Spec->abs2rel( $tgt, dirname($link) ), $link ) {
+        die "Could not create $link: $ERRNO\n";
     }
     $request_reload = 1;
     return 1;
@@ -277,7 +303,7 @@
 
             # points to nowhere
             info("Removing dangling link $link");
-            unlink($link) or die "Could not remove $link\n";
+            unlink $link or die "Could not remove $link\n";
         }
         return 'missing';
     }
@@ -295,7 +321,7 @@
     my ($link) = @_;
 
     if ( -l $link ) {
-        unlink($link) or die "Could not remove $link: $!\n";
+        unlink $link or die "Could not remove $link: $ERRNO\n";
     }
     elsif ( -e $link ) {
         error("$link is not a symbolic link, not deleting\n");
@@ -306,7 +332,7 @@
 }
 
 sub threaded {
-    my $result = "";
+    my $result = q{};
     $result = qx{/usr/sbin/apache2 -V | grep 'threaded'} if -x '/usr/sbin/apache2';
     if ( $result =~ / no/ ) {
         return 0;
@@ -318,10 +344,12 @@
 
 sub info {
     print @_ if !$quiet;
+    return;
 }
 
 sub error {
-    print STDERR 'ERROR: ', @_;
+    print {*STDERR} 'ERROR: ', @_;
+    return;
 }
 
 sub read_env_file {
@@ -329,7 +357,7 @@
 
     -r $file or return;
     my @lines = qx{env - sh -c '. $file && env'};
-    if ($?) {
+    if ($CHILD_ERROR) {
         die "Could not read $file\n";
     }
 
@@ -338,4 +366,5 @@
         $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";
         $ENV{$1} = $2;
     }
+    return;
 }
